#!/bin/bash

set -e

root_dir="${HOME}/.bitcore"
platform=`uname -a | awk '{print tolower($1)}'`
arch=`uname -m`
version="0.12.3.2"
short_version="0.12.3"
url="https://github.com/dashpay/dash/releases/download/v${version}"
signer_key_url='https://keybase.io/udjinm6/pgp_keys.asc'

if [ "${platform}" == "linux" ]; then
    if [ "${arch}" == "x86_64" ]; then
        tarball_name="dashcore-${version}-linux64.tar.gz"
    elif [ "${arch}" == "x86_32" ]; then
        tarball_name="dashcore-${version}-linux32.tar.gz"
    fi
elif [ "${platform}" == "darwin" ]; then
    tarball_name="dashcore-${version}-osx64.tar.gz"
else
    echo "Dash binary distribution not available for this platform/architecture"
    exit -1
fi

binary_url="${url}/${tarball_name}"
shasums_url="${url}/SHA256SUMS.asc"

download_dashd() {

    mkdir -p "${root_dir}"
    mkdir -p "${root_dir}/data"

    cd "${root_dir}/data"

    echo "Downloading dash: ${binary_url}"

    is_curl=true
    if hash curl 2>/dev/null; then
        curl --fail -I $binary_url >/dev/null 2>&1
    else
        is_curl=false
        wget --server-response --spider $binary_url >/dev/null 2>&1
    fi

    if test $? -eq 0; then
        if [ "${is_curl}" = true ]; then
            curl -L $binary_url > $tarball_name
            curl -L $shasums_url > SHA256SUMS.asc
        else
            wget $binary_url
            wget $shasums_url
        fi
        if test -e "${tarball_name}"; then
            echo "Unpacking dash distribution"
            tar -xvzf $tarball_name
            if test $? -eq 0; then
                ln -sf "./dashcore-${version}/bin/dashd"
                return;
            fi
        fi
    fi
    echo "Dash binary distribution could not be downloaded"
    exit -1
}

verify_download() {
    echo "Verifying signatures of dash download"

    if hash curl 2>/dev/null && hash gpg 2>/dev/null; then
      curl "${signer_key_url}" | gpg --import
    else
      echo 'You must have the curl and gpg in order to verify signatures. If on OSX, please use brew install gpg curl. If on Linux, please use your package management system such as apt-get or yum/dnf or pacman.'
      exit -1
    fi

    gpg --verify "${root_dir}/data/SHA256SUMS.asc"
    if hash shasum 2>/dev/null; then
        shasum_cmd="shasum -a 256"
    else
        shasum_cmd="sha256sum"
    fi

    download_sha=$(${shasum_cmd} "${root_dir}/bin/${tarball_name}" | awk '{print $1}')
    expected_sha=$(cat "${root_dir}/bin/SHA256SUMS.asc" | grep "${tarball_name}" | awk '{print $1}')
    echo "Checksum (download): ${download_sha}"
    echo "Checksum (verified): ${expected_sha}"
    if [ "${download_sha}" != "${expected_sha}" ]; then
        echo -e "\033[1;31mChecksums did NOT match! Please do not proceed with the installation.\033[0m\n"
        exit 1
    else
        echo -e "\033[1;32mChecksums matched!\033[0m\n"
    fi
}

if [ -z "${SKIP_DASH_DOWNLOAD}" ]; then
    echo 'Skipping the dashd download...'
    download_dashd
fi

if [ -z "${SKIP_DASH_VERIFY}" ]; then
    echo 'Skipping the dashd verification...'
    verify_download
fi

exit 0
